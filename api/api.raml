#%RAML 0.8
title: Polliwog
baseUri: http://polliwog-app.herokuapp.com/api/
documentation:
  - title: Overview
    content: |
      # TODO IN MARKDOWN
  - title: Getting started
    content: |
      # TODO IN MARKDOWN
  - title: The Privacy Rule
    content: |
      # TODO IN MARKDOWN
  - title: User Roles
    content: |
      # TODO IN MARKDOWN
  - title: Public & private sessions
    content: |
      # TODO IN MARKDOWN
  - title: Concept of Moods
    content: |
      # TODO IN MARKDOWN
  - title: Polls, questions & choices
    content: |
      # TODO IN MARKDOWN
  - title: Contributors
    content: |
      * El√©onore d'Agostino ([paranoodle](https://github.com/paranoodle))
      * Karim Ghozlani ([gweezer7](https://github.com/gweezer7))
      * Yassin Kammoun ([yibnl](https://github.com/yibnl))
      * Paul Ntawuruhunga ([paulnta](https://github.com/paulnta))
schemas:
  - session: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "key": {
            "type": "string",
            "unique": true
          },
          "name": {
            "type": "string",
            "required": true,
            "maxlength": 30
          },
          "description": {
            "type": "string",
            "required": true,
            "maxlength": 120
          },
          "creationDate": {
            "type": "date",
            "default": "date.now"
          },
          "isPrivate": {
            "type": "boolean",
            "default": false
          },
          "speaker": {
            "$ref": "user"
          },
          "listeners": {
            "type": "array",
            "items": {"$ref": "user"}
          },
          "moods": {
            "type": "array",
            "items": {"$ref": "mood"}
          },
          "polls": {
            "type": "array",
            "items": {"$ref": "poll"}
          },
          "resources": {
            "type": "array",
            "items": {"$ref": "resource"}
          }
        }
      }
  - poll: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "title": {
            "type": "string",
            "required": "true"
          },
          "creationDate": {
            "type": "date"
          },
          "state": {
            "type": "string"
          },
          "questions": {
            "type": "array",
            "items": {"$ref": "question"}
          },
          "participations": {
            "type": "array",
            "items": {"$ref": "participation"}
          }
        }
      }
  - question: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "poll": {"$ref": "poll"},
          "title": {
            "type": "string",
            "required": "true"
          },
          "title": {
            "type": "string"
          },
          "choices": {
            "type": "array",
            "items": {"$ref": "choice"}
          }
        }
      }
  - choice: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "question": {"$ref": "question"},
          "key": {
            "type": "string",
            "required": "true"
          },
          "text": {
            "type": "string",
            "required": "true"
          },
          "answers": {
            "type": "array",
            "items": {"$ref": "answer"}
          }
        }  
      }
  - participation: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "poll": {"$ref": "poll"},
          "participant": {
            "type": "string",
            "required": "true"
          },
          "submissionDate": {
            "type": "date"
          },
          "answers": {
            "type": "array",
            "items": {"$ref": "answer"}
          } 
        } 
      }
  - answer: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "participation": {"$ref": "participation"},
          "choice": {"$ref": "choice"}
        }
      }
resourceTypes:
  - collection:
      get:
        description: Get list of <<resourcePathName>>.
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName|!singularize>>
                example: |
                  <<exampleCollection>>
          400:
            description: Query parameters missing.
            body:
              application/x-www-form-urlencoded:
                example:
                  Bad Request
          500:
            description: An internal error occured.
      post:
        description: Create a new <<resourcePathName|!singularize>>.
        body:
          application/json:
            schema: <<resourcePathName|!singularize>>
            example: |
              <<examplePostPutItem>>
        responses:
          201:
            body:
              application/json:
                schema: <<resourcePathName|!singularize>>
                example: |
                  <<exampleItem>>
          400:
            description: It is returned when required query parameters are missing.
            body:
              application/x-www-form-urlencoded:
                example:
                  Bad Request
          404:
            description: The resource has not been found.
            body:
              application/x-www-form-urlencoded:
                example:
                  Not Found
          409:
            description: It is returned when a POST request is submitted and an equivalent resource already exists.
            body:
              application/x-www-form-urlencoded:
                example:
                  Conflict
  - collection-item:
      get:
        description: |
          Get the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id = {<<resourcePathName|!singularize>>Id}.
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName|!singularize>>
                example: |
                  <<exampleItem>>
          404:
            description: The resource has not been found.
            body:
              application/x-www-form-urlencoded:
                example:
                  Not Found
      put:
        description: |
          Update the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id = {<<resourcePathName|!singularize>>Id}.
        body:
          application/json:
            schema: <<resourcePathName|!singularize>>
            example: |
              <<examplePostPutItem>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName|!singularize>>
                example: |
                  <<exampleItem>>
          400:
            description: It is returned when required query parameters are missing.
            body:
              application/x-www-form-urlencoded:
                example:
                  Bad Request
          404:
            description: The resource has not been found.
            body:
              application/x-www-form-urlencoded:
                example:
                  Not Found
      patch:
        description: |
          Update partially the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id = {<<resourcePathName|!singularize>>Id}.
        body:
          application/json:
            schema: <<resourcePathName|!singularize>>
            example: |
              <<examplePostPutItem>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName|!singularize>>
                example: |
                  <<exampleItem>>
          400:
            description: It is returned when required query parameters are missing.
            body:
              application/x-www-form-urlencoded:
                example:
                  Bad Request
          404:
            description: The resource has not been found.
            body:
              application/x-www-form-urlencoded:
                example:
                  Not Found
      delete:
        description: |
          Delete the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id = {<<resourcePathName|!singularize>>Id}.
        responses:
          204:
            description: It is returned when a DELETE request is submitted and succeed.
            body:
              application/x-www-form-urlencoded:
                example:
                  Not Content
          404:
            description: The resource has not been found.
            body:
              application/x-www-form-urlencoded:
                example:
                  Not Found
/sessions:
  type:
    collection:
      exampleCollection: |
        [
          {
            _id: 's1',
            key: 'BF2DG',
            name: 'HEIGVD-TWEB-2015-Session1',
            description: 'Introducing TWEB course to students',
            creationDate: 'Sun, 06 Nov 1994 08:49:37 GMT',
            isPrivate: true,
            speaker: 'sp1',
            listeners: [
              '/sessions/s1/users/u1',
              '/sessions/s1/users/u2',
              '/sessions/s1/users/u3',
            ],
            moods: [],
            polls: [
              '/sessions/s1/polls/p1',
              '/sessions/s1/polls/p2',
              '/sessions/s1/polls/p3',
            ],
            resources: [
              '/sessions/s1/resources/r1',
              '/sessions/s1/resources/r2',
              '/sessions/s1/resources/r3',

          },
          {
            _id: 's2',
            key: 'XY12SG',
            name: 'HEIGVD-TWEB-2015-Session2',
            description: 'Introducing Javascript basics to students',
            creationDate: 'Sun, 13 Nov 1994 08:49:37 GMT',
            isPrivate: true,
            speaker: 'sp1',
            listeners: [
              '/sessions/s2/users/u1',
              '/sessions/s2/users/u2',
              '/sessions/s2/users/u3',
            ],
            moods: [],
            polls: [
              '/sessions/s2/polls/p4',
              '/sessions/s2/polls/p5',
              '/sessions/s2/polls/p6',
            ],
            resources: [
              '/sessions/s2/resources/r4',
              '/sessions/s2/resources/r5',
              '/sessions/s2/resources/r6',

          },
          {
            _id: 's3',
            key: 'T89ADS',
            name: 'HEIGVD-TWEB-2015-Session3',
            description: 'Introducing api-copilot testing tool to students',
            creationDate: 'Sun, 20 Nov 1994 08:49:37 GMT',
            isPrivate: true,
            speaker: 'sp1',
            listeners: [
              '/sessions/s3/users/u1',
              '/sessions/s3/users/u2',
              '/sessions/s3/users/u3',
            ],
            moods: [],
            polls: [
              '/sessions/s3/polls/p7',
              '/sessions/s3/polls/p8',
              '/sessions/s3/polls/p9',
            ],
            resources: [
              '/sessions/s3/resources/r7',
              '/sessions/s3/resources/r8',
              '/sessions/s3/resources/r9',
            ]
          }
        ]
      examplePostPutItem: |
        {
          'name': 'HEIGVD-TWEB-2015-Session1',
          'description': 'Introducing TWEB course to students',
          'isPrivate': true,
        }
      exampleItem: |
        {
          _id: 's1',
          key: 'BF2DG',
          name: 'HEIGVD-TWEB-2015-Session1',
          description: 'Introducing TWEB course to students',
          creationDate: 'Sun, 06 Nov 1994 08:49:37 GMT',
          isPrivate: true,
          speaker: 'sp1',
          listeners: [],
          moods: [],
          polls: [],
          resources: []
        }
  /{sessionId}:
    type:
      collection-item:
        examplePostPutItem: |
          {
            'description': 'Introducing TWEB course to third year students',
          }
        exampleItem: |
          {
            _id: 's1',
            key: 'BF2DG',
            name: 'HEIGVD-TWEB-2015-Session1',
            description: 'Introducing TWEB course to third year students',
            creationDate: 'Sun, 06 Nov 1994 08:49:37 GMT',
            isPrivate: true,
            speaker: 'sp1',
            listeners: [
              '/sessions/s1/users/u1',
              '/sessions/s1/users/u2',
              '/sessions/s1/users/u3',
            ],
            moods: [],
            polls: [
              '/sessions/s1/polls/p1',
              '/sessions/s1/polls/p2',
              '/sessions/s1/polls/p3',
            ],
            resources: [
              '/sessions/s1/resources/r1',
              '/sessions/s1/resources/r2',
              '/sessions/s1/resources/r3',
          }
    /polls: 
      type:
        collection:
          exampleCollection: |
            [
              {
                '_id': 'p1',
                'title': 'TWEB-2015',
                'creationDate': '2015-05-02 10:41' 
                'state': 'drafti'
                'questions': 
                  [
                    '/polls/p1/questions/q1',
                    '/polls/p1/questions/q2',
                    '/polls/p1/questions/q3'
                  ],
                'participations': ['/polls/p1/participations/pp1']
              },
              {
                '_id': 'p2',
                'title': 'AMT-2015',
                'creationDate': '2015-11-25 14:03'
                'state': 'active'
                'questions': 
                  [
                    '/polls/p2/questions/q11',
                    '/polls/p2/questions/q22',
                    '/polls/p2/questions/q32'
                  ],
                'participations': []
              },
              {
                '_id': 'p3',
                'title': 'RES-2015',
                'creationDate': '2015-12-12 12:00', 
                'state': 'closed'
                'questions': 
                  [
                    '/polls/p3/questions/q13',
                    '/polls/p3/questions/q23',
                    '/polls/p3/questions/q33'
                  ],
                'participations': []
              }
            ]
          examplePostPutItem: |
            {
              'title': 'TWEB-2015', 
              'state': 'drafti'
            }
          exampleItem: |
            {
                '_id': 'p2',
                'title': 'TWEB-2015',
                'creationDate': '2015-11-25 14:03'
                'state': 'drafti'
                'questions': [],
                'participations': []
              },
      /{pollId}:
        type:
          collection-item:
            examplePostPutItem: |
              {
                'title': 'TWEB-2015', 
                'state': 'drafti'
              }
            exampleItem: |
              {
                '_id': 'p1',
                'title': 'TWEB-2015', 
                'creationDate': '2015-11-02 09:41'
                'state': 'drafti',
                'questions': 
                    [
                      '/polls/p1/questions/q1',
                      '/polls/p1/questions/q2',
                      '/polls/p1/questions/q3'
                    ],
                'participations': ['/polls/p1/participations/pp1']
              }
        /participations:
          type:
            collection:
              exampleCollection: |
                [
                  {
                    '_id': 'pp1',
                    'participant': 'yibnl',
                    'submissionDate': '2015-12-29 23:15',
                    'answers': 
                      [
                        '/polls/p1/participations/pp1/answers/a1',
                        '/polls/p1/participations/pp1/answers/a2',
                        '/polls/p1/participations/pp1/answers/a3'
                      ]
                  },
                  {
                    '_id': 'pp2',
                    'participant': 'paranoodle',
                    'submissionDate': '2015-12-29 10:15',
                    'answers': 
                      [
                        '/polls/p2/participations/pp2/answers/a11',
                        '/polls/p2/participations/pp2/answers/a22'
                      ]
                  },
                  {
                    '_id': 'pp3',
                    'participant': 'gweezer7',
                    'submissionDate': '2015-12-30 17:42',
                    'answers': 
                      [
                        '/polls/p2/participations/pp2/answers/a13'
                      ]
                  }
                ]
              examplePostPutItem: |
                {
                  'participant': 'gweezer7'
                }
              exampleItem: |
                {
                  '_id': 'pp2',
                  'participant': 'gweezer7',
                  'submissionDate': '2015-12-29 10:15',
                  'answers': []
                }
          /{participationId}:
            type:
              collection-item:
                examplePostPutItem: |
                  {
                    'participant': 'gweezer7'
                  }
                exampleItem: |
                  {
                    '_id': 'pp3',
                    'participant': 'gweezer7',
                    'submissionDate': '2015-12-30 17:42',
                    'answers': 
                      [
                        '/polls/p2/participations/pp2/answers/a13'
                      ]
                  }
            /answers:
              type:
                collection:
                  exampleCollection: | 
                    [
                      {
                        '_id': 'a1',
                        'participation': 'pp1',
                        'choice': 'c1'
                      }
                      {
                        '_id': 'a22',
                        'participation': 'pp1',
                        'choice': 'c11'
                      }
                      {
                        '_id': 'a21',
                        'participation': 'pp1',
                        'choice': 'c13'
                      }
                    ]
                  examplePostPutItem: |
                    {
                      There is no body. However, two query parameters are required:
                      ?question###&choice=### where ### corresponds respectively to the identifiers of the question and the choice.
                    }
                  exampleItem: |
                    
              /{answerId}:
                type:
                  collection-item:
                    examplePostPutItem: |
                      Question query parameter is required for update action.
                      {
                        '_id': 'a22',
                        'participation': 'pp1',
                        'choice': 'c11'
                      }
                    exampleItem: | 
                      {}
        /questions: 
          type:
            collection:
              exampleCollection: |
                [
                  {
                    '_id': 'q1',
                    'poll': 'p1',
                    'title': 'What is a scenario ?',
                    'type': 'reminder' 
                    'choices':
                      [
                        '/polls/p1/questions/q1/choice/c1',
                        '/polls/p1/questions/q1/choice/c2',
                        '/polls/p1/questions/q1/choice/c3'
                      ]
                  },
                  {
                    '_id': 'q2',
                    'poll': 'p1',
                    'title': ''How do you run a scenario ?',
                    'type': 'reminder' 
                    'choices':
                      [
                        '/polls/p1/questions/q2/choice/c4',
                        '/polls/p1/questions/q2/choice/c5',
                        '/polls/p1/questions/q2/choice/c6'
                      ]
                  },
                  {
                    '_id': 'q3',
                    'poll': 'p1',
                    'title': 'Who is the author of the API Copilot',
                    'type': 'reminder' 
                    'choices':
                      [
                        '/polls/p1/questions/q3/choice/c7',
                        '/polls/p1/questions/q3/choice/c8',
                        '/polls/p1/questions/q3/choice/c9'
                      ]
                  }
                ]
              examplePostPutItem: |
                {
                  'title': 'What is a scenario ?',
                  'type': 'reminder' 
                }
              exampleItem: |
                {
                  '_id': 'q1',
                  'poll': 'p1',
                  'title': 'What is a scenario ?',
                  'type': 'reminder' 
                  'choices': []
                }
          /{questionId}:
            type:
              collection-item:
                examplePostPutItem: |
                  {
                    'title': 'What is a scenario ?',
                    'type': 'reminder' 
                  }
                exampleItem: |
                  {
                    '_id': 'q1',
                    'poll': 'p1',
                    'title': 'What is a scenario ?',
                    'type': 'reminder' 
                    'choices':
                      [
                        '/polls/p1/questions/q1/choice/c1',
                        '/polls/p1/questions/q1/choice/c2',
                        '/polls/p1/questions/q1/choice/c3'
                      ]
                  }
            /choices:
              type:
                collection:
                  exampleCollection: |
                    [
                      {
                        '_id': 'c1',
                        'question': 'q1',
                        'key': 'a', 
                        'text': 'A setting, in particular for a work of art or literature.',
                        'answers': []
                      },
                      {
                        '_id': 'c2',
                        'question': 'q1',
                        'key': 'b', 
                        'text': 'A series of steps that are executed in order using the "step" method.',
                        'answers': 
                          [
                            '/polls/p1/participations/pp2/answers/a1',
                            '/polls/p1/participations/pp2/answers/a2',
                            '/polls/p1/participations/pp2/answers/a3'
                          ]
                      }
                      ,{
                        '_id': 'c3',
                        'question': 'q1',
                        'key': 'c', 
                        'text': 'A written outline of a film, novel, or stage work giving details of the plot and individual scenes.',
                        'answers': []
                      }
                    ]
                  examplePostPutItem: |
                    {
                      'key': 'b', 
                      'text': 'A series of steps that are executed in order using the "step" method.'
                    }
                  exampleItem: |
                    {
                      '_id': 'c2',
                      'question': 'q1',
                      'key': 'b', 
                      'text': 'A series of steps that are executed in order using the "step" method.',
                      'answers': []
                    }
              /{choiceId}:
                type:
                  collection-item:
                    examplePostPutItem: |
                      {
                        'key': 'b', 
                        'text': 'A series of steps that are executed in order using the "step" method.'
                      }
                    exampleItem: |
                      {
                        '_id': 'c1',
                        'question': 'q1',
                        'key': 'b', 
                        'text': 'A series of steps that are executed in order using the "step" method.',
                        'answers': []
                      }
    /resources:
      type:
        collection:
          exampleCollection: |
            [
              {
                '_id': 'r1',
                'session': 's1',
                'title': 'Lorem ipsum',
                'subhead': 'Lorem ipsum dolor sit amet',
                'creationDate': 'Sun, 06 Nov 1994 08:49:37 GMT', 
                'text': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum',
                'file': ''
              },
              {
                '_id': 'r2',
                'session': 's1',
                'title': 'Lorem ipsum',
                'subhead': 'Lorem ipsum dolor sit amet',
                'creationDate': 'Sun, 06 Nov 1994 08:49:37 GMT', 
                'text': '',
                'file': 'https://www.dropbox.com/s/qmocfrco2t0d28o/Fluffbeast.docx'
              },
              {
                '_id': 'r3',
                'session': 's1',
                'title': 'Lorem ipsum',
                'subhead': 'Lorem ipsum dolor sit amet',
                'creationDate': 'Sun, 06 Nov 1994 08:49:37 GMT', 
                'text': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum',
                'file': 'https://www.dropbox.com/s/qmocfrco2t0d28o/Fluffbeast.docx'
              }
            ]
          examplePostPutItem: |
            {
              'title': 'Lorem ipsum',
              'subhead': 'Lorem ipsum dolor sit amet',
              'text': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum',
              'file': 'https://www.dropbox.com/s/qmocfrco2t0d28o/Fluffbeast.docx'
            }
          exampleItem: |
            {
              '_id': 'r3',
              'session': 's1',
              'title': 'Lorem ipsum',
              'subhead': 'Lorem ipsum dolor sit amet',
              'creationDate': 'Sun, 06 Nov 1994 08:49:37 GMT', 
              'text': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum',
              'file': 'https://www.dropbox.com/s/qmocfrco2t0d28o/Fluffbeast.docx'
            }
      /{resourceId}:
        type:
          collection-item:
            examplePostPutItem: |
              {
                'title': 'Ipsum lorem '
              }
            exampleItem: |
              {
                '_id': 'r1',
                'session': 's1',
                'title': 'Ipsum lorem ',
                'subhead': 'Lorem ipsum dolor sit amet',
                'creationDate': 'Sun, 06 Nov 1994 08:49:37 GMT', 
                'text': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum',
                'file': 'https://www.dropbox.com/s/qmocfrco2t0d28o/Fluffbeast.docx'
              }
    /moods:
      type:
        collection:
          exampleCollection: |
            []
          examplePostPutItem: |
            {}
          exampleItem: |
            {}
      /{moodId}:
        type:
          collection-item:
            examplePostPutItem: |
              {}
            exampleItem: |
              {}
    /users:
      type:
        collection:
          exampleCollection: |
            []
          examplePostPutItem: |
            {}
          exampleItem: |
            {}
      /{userId}:
        type:
          collection-item:
            examplePostPutItem: |
              {}
            exampleItem: |
              {}